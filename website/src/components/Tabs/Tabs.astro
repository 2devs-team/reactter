---
import { parseHTML } from "linkedom";
import {
  TAB_ITEM_TAG_NAME,
  getTabId as getTabKey,
  getStoreKey,
  getStore,
  getXData,
} from "./tabs";

interface Props {
  groupName?: string;
}

let tabItemCount = 0;
const panelHtml = await Astro.slots.render("default");
const { document } = parseHTML(panelHtml);

const $tabsPresentations = document.createElement("div");
const $tabSections = document.createElement("div");

Array.from(document.children).forEach((child) => {
  if (child.tagName.toLocaleLowerCase() !== TAB_ITEM_TAG_NAME) {
    document.removeChild(child);
  }

  const $tabPresentation = child.querySelector("[role='presentation']");
  const $tab = child.querySelector("[role='tab']");
  const $tabPanel = child.querySelector("[role='tabpanel']");

  if (!$tabPresentation) return;

  tabItemCount++;

  const dataKey = child.getAttribute("data-name");
  const tabKey = getTabKey(dataKey ?? tabItemCount);

  if (tabItemCount === 1) {
    $tabPresentation.setAttribute("x-init", `activeTab = "${tabKey}"`);
  }

  $tabPresentation.setAttribute("x-on:click", `activeTab = "${tabKey}"`);

  $tab?.setAttribute(
    "x-bind:aria-selected",
    `activeTab === "${tabKey}" ? "true" : "false"`
  );
  $tab?.setAttribute("x-bind:tabindex", `activeTab === "${tabKey}" ? 0 : -1`);
  $tab?.setAttribute("id", tabKey);

  $tabPanel?.setAttribute("aria-labelledby", tabKey);
  $tabPanel?.setAttribute("x-show", `activeTab === "${tabKey}"`);

  $tabsPresentations.appendChild($tabPresentation);
  $tabSections.appendChild($tabPanel ?? document.createElement("div"));
});

const tabPresentationsHtml = $tabsPresentations.innerHTML;
const tabSectionsHtml = $tabSections.innerHTML;
const { groupName }: Props = Astro.props;
---

<div class="tabs" x-data={getXData(groupName)}>
  <div class="tablist-wrapper not-content">
    <ul role="tablist">
      <Fragment client:only set:html={tabPresentationsHtml} />
    </ul>
  </div>
  <Fragment client:only set:html={tabSectionsHtml} />
</div>

<style>
  div.tabs {
    display: block;
  }

  .tablist-wrapper {
    overflow-x: auto;
  }

  [role="tablist"] {
    display: flex;
    list-style: none;
    border-bottom: 2px solid var(--sl-color-gray-5);
    padding: 0;
  }

  .tablist-wrapper ~ :global([role="tabpanel"]) {
    margin-top: 1rem;
  }
</style>
